import { useRouter } from 'next/router';
import { useState } from 'react';

export default function SecurePage({ isAuthenticated }) {
  const router = useRouter();
  const [password, setPassword] = useState('');

  if (!isAuthenticated) {
    router.push('/login');
    return null;
  }

  return (
    <div>
      <h1>Secure Page</h1>
      <p>This page is secured with a password.</p>
    </div>
  );
}

export async function getServerSideProps({ req }) {
  const password = req.cookies.password; // ou récupérez le mot de passe dans l'état global de l'application
  const isAuthenticated = password === 'monmotdepasse'; // Vérifiez si le mot de passe est correct

  return {
    props: {
      isAuthenticated,
    },
  };
}


import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';

const withAuth = (WrappedComponent, password) => {
  const Auth = () => {
    const router = useRouter();
    const [isAuthed, setIsAuthed] = useState(false);

    useEffect(() => {
      const auth = async () => {
        const isAuthenticated = // Vérifiez si le mot de passe est correct en utilisant l'état global de l'application
        setIsAuthed(isAuthenticated);

        if (!isAuthenticated) {
          router.push('/login');
        }
      };

      auth();
    }, []);

    if (!isAuthed) {
      return null;
    }

    return <WrappedComponent />;
  };

  return Auth;
};

export default withAuth;

import withAuth from '../components/withAuth';

const SecretPage = () => {
  return <h1>Page sécurisée</h1>;
};

export default withAuth(SecretPage, 'password');
