// Importez la bibliothèque `node-fetch` pour effectuer des requêtes HTTP.
const fetch = require('node-fetch');

// Fonction pour envoyer un email via SendGrid.
async function sendEmail(fromEmail, toEmail, subject, content) {
  // Créez un objet avec les informations de l'email.
  const email = {
    personalizations: [
      {
        to: [
          {
            email: toEmail
          }
        ]
      }
    ],
    from: {
      email: fromEmail
    },
    subject: subject,
    content: [
      {
        type: 'text/plain',
        value: content
      }
    ]
  };

  // Effectuez une requête POST vers l'API SendGrid pour envoyer l'email.
  const response = await fetch('https://api.sendgrid.com/v3/mail/send', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${process.env.SENDGRID_API_KEY}` // Remplacez `process.env.SENDGRID_API_KEY` par votre clé API SendGrid.
    },
    body: JSON.stringify(email)
  });

  // Vérifiez si la requête a été effectuée avec succès.
  if (response.status === 202) {
    console.log('Email sent successfully!');
  } else {
    console.error(`Failed to send email. Error: ${response.statusText}`);
  }
}



// Récupérez les informations de l'email.
const fromEmail = 'john.doe@example.com';
const toEmail = 'jane.doe@example.com';
const subject = 'Test Email';
const content = 'This is a test email.';

// Appelez la fonction `sendEmail` pour envoyer l'email.
sendEmail(fromEmail, toEmail, subject, content);


<svg width="84px" height="84px" viewBox="0 0 24 24" role="img" xmlns="http://www.w3.org/2000/svg"><path d="m24 12.42-4.428 4.415H24zm-4.428-4.417-4.414 4.418v4.414h4.414V12.42L24 8.003V3.575h-4.428zm-4.414 0 4.414-4.428h-4.414zM0 15.996h8.842v4.43h4.412V12.42H4.428l8.826-8.846H8.842L0 12.421z"/></svg>
