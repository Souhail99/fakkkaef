function vote(uint proposalIndex, bool _vote) public {
        Proposal storage proposal = proposals[proposalIndex];
        require(block.timestamp >= proposal.startTime, "Voting has not started yet.");
        require(block.timestamp < proposal.endTime, "Voting has ended.");
        require(!proposal.voted[msg.sender], "You have already voted.");
        if (_vote) {
            proposal.yesVotes++;
        } else {
            proposal.noVotes++;
        }
        proposal.voted[msg.sender] = true;
    }

    function executeProposal(uint proposalIndex) public {
        Proposal storage proposal = proposals[proposalIndex];
        require(block.timestamp >= proposal.endTime, "Voting has not ended yet.");
        require(proposal.state == ProposalState.Active, "Proposal is not active.");
        if (proposal.yesVotes > proposal.noVotes) {
            proposal.state = ProposalState.Succeeded;
        } else {
            proposal.state = ProposalState.Defeated;
        }
    }


const initialState1 = {
  count1: 0,
};
const { useGlobalState: useGlobalState1, setGlobalState: setGlobalState1 } = createGlobalState(initialState1);

const initialState2 = {
  count2: 0,
};
const { useGlobalState: useGlobalState2, setGlobalState: setGlobalState2 } = createGlobalState(initialState2);



const match = string.match(/ID de la proposition : (\d+)/);

if (match !== null) {
  const id = parseInt(match[1], 10);
  console.log(id); // Outputs: 5
} else {
  console.log("ID de la proposition not found");
}

// Vérifier si MetaMask est installé
if (typeof window.ethereum !== 'undefined') {
  const web3 = new Web3(window.ethereum);

  // Demander la permission de connexion
  await ethereum.request({ method: 'eth_requestAccounts' });

  // Récupérer l'adresse MetaMask
  const accounts = await ethereum.request({ method: 'eth_accounts' });
  const address = accounts[0];

  // Utiliser l'adresse dans votre API
  // ...
} else {
  console.log('MetaMask is not installed');
}

const cronExpression = `${date.getMinutes()} ${date.getHours()} ${date.getDate()} ${date.getMonth() + 1} *`;
