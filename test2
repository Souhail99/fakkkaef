function vote(uint proposalIndex, bool _vote) public {
        Proposal storage proposal = proposals[proposalIndex];
        require(block.timestamp >= proposal.startTime, "Voting has not started yet.");
        require(block.timestamp < proposal.endTime, "Voting has ended.");
        require(!proposal.voted[msg.sender], "You have already voted.");
        if (_vote) {
            proposal.yesVotes++;
        } else {
            proposal.noVotes++;
        }
        proposal.voted[msg.sender] = true;
    }

    function executeProposal(uint proposalIndex) public {
        Proposal storage proposal = proposals[proposalIndex];
        require(block.timestamp >= proposal.endTime, "Voting has not ended yet.");
        require(proposal.state == ProposalState.Active, "Proposal is not active.");
        if (proposal.yesVotes > proposal.noVotes) {
            proposal.state = ProposalState.Succeeded;
        } else {
            proposal.state = ProposalState.Defeated;
        }
    }


const initialState1 = {
  count1: 0,
};
const { useGlobalState: useGlobalState1, setGlobalState: setGlobalState1 } = createGlobalState(initialState1);

const initialState2 = {
  count2: 0,
};
const { useGlobalState: useGlobalState2, setGlobalState: setGlobalState2 } = createGlobalState(initialState2);



const match = string.match(/ID de la proposition : (\d+)/);

if (match !== null) {
  const id = parseInt(match[1], 10);
  console.log(id); // Outputs: 5
} else {
  console.log("ID de la proposition not found");
}

// Vérifier si MetaMask est installé
if (typeof window.ethereum !== 'undefined') {
  const web3 = new Web3(window.ethereum);

  // Demander la permission de connexion
  await ethereum.request({ method: 'eth_requestAccounts' });

  // Récupérer l'adresse MetaMask
  const accounts = await ethereum.request({ method: 'eth_accounts' });
  const address = accounts[0];

  // Utiliser l'adresse dans votre API
  // ...
} else {
  console.log('MetaMask is not installed');
}

const cronExpression = `${date.getMinutes()} ${date.getHours()} ${date.getDate()} ${date.getMonth() + 1} *`;


// Importer les bibliothèques nécessaires
const { create } = require('node-storage');

// Créer une instance de stockage
const store = create('./my-storage.db'); // Remplacer './my-storage.db' avec le chemin de votre fichier de stockage

// Définir une fonction pour ajouter un élément
function ajouterElement(id, etat, couleur) {
  // Vérifier si l'ID de l'élément existe déjà dans le stockage
  if (store.has(id)) {
    console.error(`L'ID ${id} existe déjà dans le stockage.`);
    return;
  }

  // Créer un objet pour représenter l'élément
  const element = {
    id: id,
    etat: etat,
    couleur: couleur
  };

  // Stocker l'objet dans le stockage
  store.put(id, element);
  console.log(`Élément avec l'ID ${id} ajouté avec succès au stockage.`);
}

// Définir une fonction pour récupérer un élément par son ID
function recupererElement(id) {
  // Vérifier si l'ID de l'élément existe dans le stockage
  if (!store.has(id)) {
    console.error(`L'ID ${id} n'existe pas dans le stockage.`);
    return;
  }

  // Récupérer l'objet de l'élément à partir du stockage
  const element = store.get(id);
  console.log(`Élément avec l'ID ${id}: `, element);
  return element;
}

// Utiliser les fonctions pour ajouter et récupérer des éléments
ajouterElement(1, 'Nouveau', 'Rouge');
ajouterElement(2, 'En cours', 'Vert');
recupererElement(1);
recupererElement(2);


BDans un contexte corporate non financier, l'adoption de la technologie blockchain peut présenter plusieurs enjeux et défis. Voici quelques réflexions :

Connaissance et sensibilisation : La compréhension de la technologie blockchain peut être limitée dans les entreprises non financières. Il peut être nécessaire de sensibiliser les parties prenantes et de former les employés sur les concepts, les avantages et les limitations de la blockchain pour faciliter son adoption.

Adaptation des processus : Intégrer la blockchain dans les processus opérationnels existants peut nécessiter des ajustements importants. Cela peut impliquer des changements dans la collecte, la validation et l'enregistrement des données, ainsi que dans les flux de travail et les protocoles de gouvernance.

Coûts et complexité techniques : La mise en œuvre d'une solution blockchain peut nécessiter des investissements en termes de développement de logiciels, d'infrastructure technique et de sécurité. Les entreprises non financières devront évaluer attentivement les coûts et la complexité technique associés à l'adoption de la blockchain.

Normes et réglementations : Les normes et réglementations autour de la blockchain peuvent varier selon les juridictions et les secteurs d'activité. Les entreprises devront prendre en compte les aspects légaux, réglementaires et de conformité liés à l'utilisation de la blockchain dans leur contexte spécifique.

Interopérabilité et collaboration : L'interopérabilité entre différentes plateformes et protocoles blockchain peut être un défi, ce qui peut limiter la collaboration et l'échange d'informations entre les entreprises. Il peut être nécessaire de développer des normes et des protocoles de collaboration pour faciliter l'adoption de la blockchain dans un contexte corporate non financier.

En somme, l'adoption de la technologie blockchain dans un contexte corporate non financier peut offrir des avantages potentiels, mais nécessite également une compréhension approfondie des enjeux spécifiques et des efforts pour adapter les processus, gérer les coûts, se conformer aux réglementations et encourager la collaboration interentreprises.
